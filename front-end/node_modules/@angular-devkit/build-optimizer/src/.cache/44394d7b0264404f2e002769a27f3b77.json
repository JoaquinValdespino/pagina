{"remainingRequest":"/home/skan/program/gitLab/materialDidactico/front-end/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/skan/program/gitLab/materialDidactico/front-end/node_modules/angular-notifier/esm5/src/services/notifier-animation.service.js","dependencies":[{"path":"/home/skan/program/gitLab/materialDidactico/front-end/node_modules/angular-notifier/esm5/src/services/notifier-animation.service.js","mtime":499162500000},{"path":"/home/skan/program/gitLab/materialDidactico/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1540859967560},{"path":"/home/skan/program/gitLab/materialDidactico/front-end/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Injectable } from '@angular/core';\nimport { fade } from './../animation-presets/fade.animation-preset';\nimport { slide } from './../animation-presets/slide.animation-preset';\n/**\n * Notifier animation service\n */\nvar NotifierAnimationService = /** @class */ /*@__PURE__*/ (function () {\n    function NotifierAnimationService() {\n        this.animationPresets = {\n            fade: fade,\n            slide: slide\n        };\n    }\n    /**\n     * Get animation data\n     *\n     * This method generates all data the Web Animations API needs to animate our notification. The result depends on both the animation\n     * direction (either in or out) as well as the notifications (and its attributes) itself.\n     *\n     * @param {?} direction    Animation direction, either in or out\n     * @param {?} notification Notification the animation data should be generated for\n     * @return {?} Animation information\n     */\n    NotifierAnimationService.prototype.getAnimationData = /**\n     * Get animation data\n     *\n     * This method generates all data the Web Animations API needs to animate our notification. The result depends on both the animation\n     * direction (either in or out) as well as the notifications (and its attributes) itself.\n     *\n     * @param {?} direction    Animation direction, either in or out\n     * @param {?} notification Notification the animation data should be generated for\n     * @return {?} Animation information\n     */\n        function (direction, notification) {\n            // Get all necessary animation data\n            var /** @type {?} */ keyframes;\n            var /** @type {?} */ duration;\n            var /** @type {?} */ easing;\n            if (direction === 'show') {\n                keyframes = this.animationPresets[notification.component.getConfig().animations.show.preset].show(notification);\n                duration = notification.component.getConfig().animations.show.speed;\n                easing = notification.component.getConfig().animations.show.easing;\n            }\n            else {\n                keyframes = this.animationPresets[notification.component.getConfig().animations.hide.preset].hide(notification);\n                duration = notification.component.getConfig().animations.hide.speed;\n                easing = notification.component.getConfig().animations.hide.easing;\n            }\n            // Build and return animation data\n            return {\n                keyframes: [\n                    keyframes.from,\n                    keyframes.to\n                ],\n                options: {\n                    duration: duration,\n                    easing: easing,\n                    fill: 'forwards' // Keep the newly painted state after the animation finished\n                }\n            };\n        };\n    return NotifierAnimationService;\n}());\nexport { NotifierAnimationService };\nfunction NotifierAnimationService_tsickle_Closure_declarations() {\n    /**\n     * List of animation presets (currently static)\n     * @type {?}\n     */\n    NotifierAnimationService.prototype.animationPresets;\n}\n//# sourceMappingURL=notifier-animation.service.js.map\n",null]}