{"remainingRequest":"/home/skan/program/gitLab/materialDidactico/front-end/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/skan/program/gitLab/materialDidactico/front-end/node_modules/angular-notifier/esm5/src/animation-presets/slide.animation-preset.js","dependencies":[{"path":"/home/skan/program/gitLab/materialDidactico/front-end/node_modules/angular-notifier/esm5/src/animation-presets/slide.animation-preset.js","mtime":499162500000},{"path":"/home/skan/program/gitLab/materialDidactico/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1540859967560},{"path":"/home/skan/program/gitLab/materialDidactico/front-end/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Slide animation preset\n */\nexport var /** @type {?} */ slide = {\n    hide: function (notification) {\n        // Prepare variables\n        var /** @type {?} */ config = notification.component.getConfig();\n        var /** @type {?} */ shift = notification.component.getShift();\n        var /** @type {?} */ from;\n        var /** @type {?} */ to;\n        // Configure variables, depending on configuration and component\n        if (config.position.horizontal.position === 'left') {\n            from = {\n                transform: \"translate3d( 0, \" + shift + \"px, 0 )\"\n            };\n            to = {\n                transform: \"translate3d( calc( -100% - \" + config.position.horizontal.distance + \"px - 10px ), \" + shift + \"px, 0 )\"\n            };\n        }\n        else if (config.position.horizontal.position === 'right') {\n            from = {\n                transform: \"translate3d( 0, \" + shift + \"px, 0 )\"\n            };\n            to = {\n                transform: \"translate3d( calc( 100% + \" + config.position.horizontal.distance + \"px + 10px ), \" + shift + \"px, 0 )\"\n            };\n        }\n        else {\n            var /** @type {?} */ horizontalPosition = void 0;\n            if (config.position.vertical.position === 'top') {\n                horizontalPosition = \"calc( -100% - \" + config.position.horizontal.distance + \"px - 10px )\";\n            }\n            else {\n                horizontalPosition = \"calc( 100% + \" + config.position.horizontal.distance + \"px + 10px )\";\n            }\n            from = {\n                transform: \"translate3d( -50%, \" + shift + \"px, 0 )\"\n            };\n            to = {\n                transform: \"translate3d( -50%, \" + horizontalPosition + \", 0 )\"\n            };\n        }\n        // Done\n        return {\n            from: from,\n            to: to\n        };\n    },\n    show: function (notification) {\n        // Prepare variables\n        var /** @type {?} */ config = notification.component.getConfig();\n        var /** @type {?} */ from;\n        var /** @type {?} */ to;\n        // Configure variables, depending on configuration and component\n        if (config.position.horizontal.position === 'left') {\n            from = {\n                transform: \"translate3d( calc( -100% - \" + config.position.horizontal.distance + \"px - 10px ), 0, 0 )\"\n            };\n            to = {\n                transform: 'translate3d( 0, 0, 0 )'\n            };\n        }\n        else if (config.position.horizontal.position === 'right') {\n            from = {\n                transform: \"translate3d( calc( 100% + \" + config.position.horizontal.distance + \"px + 10px ), 0, 0 )\"\n            };\n            to = {\n                transform: 'translate3d( 0, 0, 0 )'\n            };\n        }\n        else {\n            var /** @type {?} */ horizontalPosition = void 0;\n            if (config.position.vertical.position === 'top') {\n                horizontalPosition = \"calc( -100% - \" + config.position.horizontal.distance + \"px - 10px )\";\n            }\n            else {\n                horizontalPosition = \"calc( 100% + \" + config.position.horizontal.distance + \"px + 10px )\";\n            }\n            from = {\n                transform: \"translate3d( -50%, \" + horizontalPosition + \", 0 )\"\n            };\n            to = {\n                transform: 'translate3d( -50%, 0, 0 )'\n            };\n        }\n        // Done\n        return {\n            from: from,\n            to: to\n        };\n    }\n};\n//# sourceMappingURL=slide.animation-preset.js.map",null]}